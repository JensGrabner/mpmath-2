#summary Performance benchmarks
#labels Featured

mpmath is written with the goal of providing the fastest implementation of arbitrary-precision floating-point arithmetic possible in pure Python. This page compares the performance of mpmath with that of the `decimal` module in Python's standard library.

==Explanation of the benchmark==

These tables were generated using the `benchmark.py` script in the mpmath `tests` directory, running on an Athlon 3700+. The script measures the number of operations that can be carried out per second at the given precision with x and y being random full-precision numbers between 0 and 32.

"Decimal" means that the `decimal.Decimal` class is used, "mpf" means that the `mpmath.mpf` class is used, and "raw mpf" means that the operations are performed using the raw arithmetic functions in `mpmath.lib` (this avoids the overhead of creating object instances). Numbers in parentheses indicate the speedup compared to Decimals.

The decimal library does not implement transcendental functions, but there are user-made libraries that can be used for comparison. The Python Package Index contains at least three libraries: [http://pypi.python.org/pypi/dmath/0.9 dmath], [http://pypi.python.org/pypi/AJDecimalMathAdditions/0.1.0 AJDecimalMathAdditions], and  [http://pypi.python.org/pypi/decimalfuncs/1.4 decimalfuncs]. They all have roughly similar performance, but dmath seems to be slightly faster overall and was therefore used for this benchmark.

The three rightmost columns list the same benchmark but with  [http://psyco.sourceforge.net/ psyco] enabled (with `psyco.full()`).

==Summary==
  * mpmath is roughly 10x faster than the `decimal` module at 10-100 digit precision and 100x faster at 100-1000 digit precision.
  * Using the functional interface in mpmath.lib further improves performance by 2x for some operations.
  * Transcendental functions are an additional order of magnitude faster in mpmath compared to `Decimal` implementations. The greatest particular speedup over Decimal in the entire benchmark occurs for computing natural logarithms, which is 8000x faster at 300-digit precision (the test was not run at 1000-digit precision as finishing a single logarithm would take too long in dmath)
  * psyco speeds up both decimal and mpmath by about 50-100%
  * The only operation that is slower in mpmath is (not surprisingly) string conversion

==The results==

*Convert to integer (int(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 83000 || 290000 (3.5x) || 510000 (6.1x) || 81000 || 450000 (5.6x) || 1700000 (21.0x) ||
|| 30 || 52000 || 290000 (5.5x) || 500000 (9.6x) || 54000 || 510000 (9.6x) || 1880000 (34.7x) ||
|| 100 || 19000 || 280000 (15.1x) || 490000 (26.0x) || 18000 || 510000 (27.5x) || 1880000 (100.0x) ||
|| 300 || 6800 || 290000 (42.6x) || 500000 (73.7x) || 6500 || 490000 (76.2x) || 1880000 (288.8x) ||
|| 1000 || 1800 || 280000 (154.6x) || 510000 (280.5x) || 2000 || 510000 (259.0x) || 1880000 (940.5x) ||

*Convert to string (str(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 70000 || 32000 (0.5x) || 33000 (0.5x) || 77000 || 50000 (0.6x) || 53000 (0.7x) ||
|| 30 || 46000 || 29000 (0.6x) || 28000 (0.6x) || 46000 || 44000 (1.0x) || 44000 (1.0x) ||
|| 100 || 18000 || 13000 (0.7x) || 13000 (0.7x) || 16000 || 15000 (0.9x) || 15000 (0.9x) ||
|| 300 || 5800 || 3100 (0.5x) || 3300 (0.6x) || 5700 || 3300 (0.6x) || 3500 (0.6x) ||
|| 1000 || 2000 || 340 (0.2x) || 350 (0.2x) || 1700 || 360 (0.2x) || 360 (0.2x) ||

*Convert to float (float(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 53000 || 290000 (5.4x) || 540000 (10.1x) || 56000 || 350000 (6.2x) || 910000 (16.3x) ||
|| 30 || 37000 || 250000 (6.7x) || 400000 (10.9x) || 36000 || 330000 (9.2x) || 740000 (20.3x) ||
|| 100 || 16000 || 250000 (15.7x) || 420000 (26.5x) || 14000 || 330000 (23.0x) || 730000 (49.8x) ||
|| 300 || 6200 || 240000 (38.9x) || 390000 (63.5x) || 5400 || 330000 (62.4x) || 760000 (140.7x) ||
|| 1000 || 1900 || 240000 (122.5x) || 390000 (200.1x) || 1600 || 340000 (202.9x) || 770000 (463.2x) ||

*Equality (x==y)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 37000 || 490000 (13.2x) || 1320000 (35.6x) || 67000 || 630000 (9.4x) || 3570000 (52.9x) ||
|| 30 || 29000 || 490000 (16.4x) || 1320000 (44.2x) || 50000 || 700000 (13.8x) || 4470000 (88.0x) ||
|| 100 || 14000 || 490000 (34.2x) || 1270000 (89.1x) || 21000 || 680000 (32.4x) || 3970000 (187.1x) ||
|| 300 || 4900 || 470000 (96.5x) || 1320000 (268.0x) || 6200 || 680000 (109.5x) || 3970000 (632.9x) ||
|| 1000 || 940 || 490000 (516.7x) || 1270000 (1347.2x) || 1000 || 670000 (627.4x) || 3970000 (3694.6x) ||

*Comparison (x<y)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 38000 || 230000 (6.2x) || 450000 (12.0x) || 53000 || 380000 (7.1x) || 1190000 (22.2x) ||
|| 30 || 30000 || 230000 (7.9x) || 440000 (14.6x) || 50000 || 410000 (8.2x) || 1320000 (26.4x) ||
|| 100 || 14000 || 230000 (16.4x) || 450000 (31.6x) || 21000 || 410000 (19.4x) || 1320000 (62.5x) ||
|| 300 || 5100 || 230000 (46.2x) || 450000 (89.4x) || 6200 || 400000 (63.9x) || 1270000 (203.3x) ||
|| 1000 || 970 || 240000 (247.4x) || 450000 (466.7x) || 1000 || 400000 (374.0x) || 1270000 (1188.9x) ||

*Addition (x+y)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 10000 || 79000 (7.4x) || 110000 (10.2x) || 19000 || 150000 (7.9x) || 340000 (17.1x) ||
|| 30 || 8100 || 73000 (9.0x) || 100000 (12.4x) || 14000 || 150000 (11.0x) || 300000 (21.5x) ||
|| 100 || 3100 || 72000 (23.4x) || 98000 (31.7x) || 5100 || 140000 (28.5x) || 270000 (52.9x) ||
|| 300 || 1000 || 63000 (61.9x) || 83000 (81.8x) || 1400 || 110000 (76.8x) || 170000 (122.0x) ||
|| 1000 || 180 || 49000 (264.3x) || 62000 (333.9x) || 220 || 75000 (330.7x) || 100000 (458.2x) ||

*Subtraction (x-y)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 10000 || 79000 (7.3x) || 91000 (8.5x) || 20000 || 160000 (8.2x) || 250000 (12.7x) ||
|| 30 || 8100 || 73000 (9.0x) || 87000 (10.7x) || 14000 || 150000 (10.7x) || 240000 (17.0x) ||
|| 100 || 3100 || 72000 (23.4x) || 80000 (25.9x) || 5100 || 140000 (28.5x) || 200000 (39.4x) ||
|| 300 || 1000 || 62000 (61.9x) || 71000 (70.7x) || 1400 || 110000 (78.8x) || 150000 (105.6x) ||
|| 1000 || 180 || 49000 (265.3x) || 56000 (299.8x) || 220 || 76000 (334.5x) || 95000 (416.8x) ||

*Multiplication (x*y)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 8300 || 91000 (11.0x) || 130000 (16.0x) || 15000 || 160000 (10.8x) || 360000 (23.6x) ||
|| 30 || 5300 || 93000 (17.4x) || 130000 (25.8x) || 10000 || 170000 (17.3x) || 410000 (39.6x) ||
|| 100 || 1800 || 75000 (40.4x) || 100000 (54.8x) || 3300 || 120000 (37.7x) || 210000 (64.0x) ||
|| 300 || 550 || 37000 (68.4x) || 43000 (79.5x) || 890 || 47000 (53.0x) || 56000 (62.8x) ||
|| 1000 || 100 || 7800 (73.5x) || 8000 (75.6x) || 140 || 8100 (57.4x) || 8400 (59.2x) ||

*Division (x/y)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 4200 || 72000 (17.1x) || 100000 (25.1x) || 10000 || 130000 (13.6x) || 270000 (26.3x) ||
|| 30 || 2300 || 67000 (28.5x) || 95000 (40.6x) || 5900 || 120000 (21.4x) || 220000 (37.8x) ||
|| 100 || 760 || 51000 (66.6x) || 65000 (84.9x) || 1800 || 77000 (41.8x) || 100000 (56.7x) ||
|| 300 || 220 || 17000 (79.2x) || 19000 (86.2x) || 450 || 20000 (44.5x) || 22000 (48.3x) ||
|| 1000 || 40 || 2400 (59.9x) || 2400 (60.5x) || 60 || 2400 (40.9x) || 2500 (41.3x) ||

*Square root (x^0.5)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 430 || 40000 (92.9x) || 49000 (111.5x) || 890 || 98000 (110.6x) || 120000 (134.4x) ||
|| 30 || 290 || 34000 (118.6x) || 39000 (137.6x) || 590 || 83000 (141.2x) || 98000 (166.9x) ||
|| 100 || 100 || 26000 (248.8x) || 29000 (276.9x) || 200 || 53000 (257.0x) || 58000 (282.0x) ||
|| 300 || 30 || 12000 (421.5x) || 13000 (449.7x) || 53 || 18000 (352.9x) || 19000 (363.5x) ||
|| 1000 || 6 || 2800 (429.4x) || 2900 (439.4x) || 9 || 3100 (340.5x) || 3100 (341.9x) ||

*Integer power (x^42)*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 850 || 12000 (15.0x) || 13000 (15.6x) || 1600 || 35000 (20.9x) || 41000 (24.4x) ||
|| 30 || 590 || 12000 (20.6x) || 12000 (21.5x) || 1100 || 32000 (28.3x) || 37000 (32.2x) ||
|| 100 || 230 || 9800 (41.4x) || 10000 (43.1x) || 430 || 20000 (47.2x) || 21000 (49.9x) ||
|| 300 || 75 || 5800 (78.2x) || 5900 (79.9x) || 120 || 8600 (70.9x) || 8800 (72.7x) ||
|| 1000 || 14 || 1500 (105.4x) || 1500 (106.1x) || 19 || 1700 (87.2x) || 1700 (87.8x) ||

*Exponential function (exp(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 94 || 29000 (312.1x) || 33000 (356.2x) || 190 || 44000 (225.1x) || 65000 (327.4x) ||
|| 30 || 38 || 24000 (625.0x) || 26000 (684.7x) || 81 || 37000 (462.7x) || 49000 (610.6x) ||
|| 100 || 5 || 9700 (1699.0x) || 10000 (1771.6x) || 11 || 12000 (1063.5x) || 13000 (1154.8x) ||
|| 300 || 0 || 1600 (2264.1x) || 1600 (2280.0x) || 1 || 1700 (1339.5x) || 1700 (1356.8x) ||

*Natural logarithm (log(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 81 || 12000 (158.1x) || 14000 (176.5x) || 160 || 20000 (124.8x) || 24000 (149.0x) ||
|| 30 || 19 || 9100 (477.7x) || 9800 (515.7x) || 39 || 16000 (409.2x) || 18000 (468.6x) ||
|| 100 || 1 || 4500 (3057.2x) || 4700 (3194.6x) || 2 || 6600 (2252.5x) || 7000 (2381.1x) ||
|| 300 || 0 || 1000 (7941.0x) || 1000 (8192.0x) || 0 || 1100 (5181.6x) || 1200 (5230.4x) ||

*Sine (sin(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 130 || 16000 (123.0x) || 18000 (131.1x) || 280 || 26000 (93.3x) || 32000 (116.4x) ||
|| 30 || 58 || 13000 (236.3x) || 14000 (245.7x) || 120 || 22000 (187.7x) || 26000 (216.7x) ||
|| 100 || 9 || 5800 (642.9x) || 5900 (656.8x) || 18 || 8000 (441.4x) || 8400 (463.2x) ||
|| 300 || 1 || 970 (824.6x) || 970 (822.6x) || 2 || 1000 (511.0x) || 1000 (516.0x) ||

*Tangent (tan(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 69 || 15000 (218.7x) || 15000 (230.3x) || 140 || 28000 (201.4x) || 30000 (213.4x) ||
|| 30 || 29 || 11000 (398.4x) || 12000 (411.8x) || 61 || 22000 (365.7x) || 22000 (375.1x) ||
|| 100 || 4 || 5200 (1175.1x) || 5300 (1192.7x) || 9 || 7400 (828.3x) || 7500 (837.1x) ||
|| 300 || 0 || 920 (1566.8x) || 920 (1571.7x) || 1 || 1000 (972.4x) || 1000 (972.2x) ||

*Inverse tangent(atan(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 30 || 10000 (332.5x) || 10000 (352.2x) || 62 || 18000 (301.0x) || 19000 (310.8x) ||
|| 30 || 11 || 6000 (545.4x) || 6300 (566.6x) || 23 || 10000 (466.5x) || 10000 (472.2x) ||
|| 100 || 1 || 1400 (1033.1x) || 1400 (1038.8x) || 2 || 1800 (682.3x) || 1800 (683.4x) ||
|| 300 || 0 || 150 (1014.2x) || 150 (1014.6x) || 0 || 160 (623.0x) || 160 (623.7x) ||

*Hyperbolic cosine (cosh(x))*
|| *digits* || *Decimal* || *mpf* ||  *raw mpf* || *Decimal+psyco* || *mpf+psyco* || *raw mpf+psyco* ||
|| 15 || 140 || 15000 (103.7x) || 16000 (109.8x) || 290 || 28000 (97.3x) || 36000 (121.9x) ||
|| 30 || 62 || 13000 (215.0x) || 14000 (225.1x) || 130 || 25000 (192.1x) || 29000 (228.9x) ||
|| 100 || 9 || 7200 (763.5x) || 7400 (784.1x) || 18 || 10000 (548.9x) || 11000 (586.0x) ||
|| 300 || 1 || 1400 (1211.5x) || 1400 (1222.9x) || 2 || 1500 (744.4x) || 1500 (752.7x) ||