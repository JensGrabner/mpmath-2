"""
Easy-to-use test-generating code:

cases = '''
exp 2.25
log 2.25
'''

from mpmath import *
mp.dps = 20
for test in cases.splitlines():
    if not test:
        continue
    words = test.split()
    fname = words[0]
    args = words[1:]
    argstr = ", ".join(args)
    testline = "%s(%s)" % (fname, argstr)
    ans = str(eval(testline))
    print "    assert ae(fp.%s, %s)" % (testline, ans)

"""

from mpmath import fp

def ae(x, y, tol=1e-12):
    if x == y:
        return True
    return abs(x-y) <= tol*abs(y)

def test_fp_number_parts():
    assert ae(fp.arg(3), 0.0)
    assert ae(fp.arg(-3), 3.1415926535897932385)
    assert ae(fp.arg(3j), 1.5707963267948966192)
    assert ae(fp.arg(-3j), -1.5707963267948966192)
    assert ae(fp.arg(2+3j), 0.98279372324732906799)
    assert ae(fp.arg(-1-1j), -2.3561944901923449288)
    assert ae(fp.re(2.5), 2.5)
    assert ae(fp.re(2.5+3j), 2.5)
    assert ae(fp.im(2.5), 0.0)
    assert ae(fp.im(2.5+3j), 3.0)
    assert ae(fp.floor(2.5), 2.0)
    assert ae(fp.floor(2), 2.0)
    assert ae(fp.floor(2.0+0j), (2.0 + 0.0j))
    assert ae(fp.floor(-1.5-0.5j), (-2.0 - 1.0j))
    assert ae(fp.ceil(2.5), 3.0)
    assert ae(fp.ceil(2), 2.0)
    assert ae(fp.ceil(2.0+0j), (2.0 + 0.0j))
    assert ae(fp.ceil(-1.5-0.5j), (-1.0 + 0.0j))

def test_fp_cospi_sinpi():
    assert ae(fp.sinpi(0), 0.0)
    assert ae(fp.sinpi(0.25), 0.7071067811865475244)
    assert ae(fp.sinpi(0.5), 1.0)
    assert ae(fp.sinpi(0.75), 0.7071067811865475244)
    assert ae(fp.sinpi(1), 0.0)
    assert ae(fp.sinpi(1.25), -0.7071067811865475244)
    assert ae(fp.sinpi(1.5), -1.0)
    assert ae(fp.sinpi(1.75), -0.7071067811865475244)
    assert ae(fp.sinpi(2), 0.0)
    assert ae(fp.sinpi(2.25), 0.7071067811865475244)
    assert ae(fp.sinpi(0+3j), (0.0 + 6195.8238636085899556j))
    assert ae(fp.sinpi(0.25+3j), (4381.1091260582448033 + 4381.1090689950686908j))
    assert ae(fp.sinpi(0.5+3j), (6195.8239443081075259 + 0.0j))
    assert ae(fp.sinpi(0.75+3j), (4381.1091260582448033 - 4381.1090689950686908j))
    assert ae(fp.sinpi(1+3j), (0.0 - 6195.8238636085899556j))
    assert ae(fp.sinpi(1.25+3j), (-4381.1091260582448033 - 4381.1090689950686908j))
    assert ae(fp.sinpi(1.5+3j), (-6195.8239443081075259 + 0.0j))
    assert ae(fp.sinpi(1.75+3j), (-4381.1091260582448033 + 4381.1090689950686908j))
    assert ae(fp.sinpi(2+3j), (0.0 + 6195.8238636085899556j))
    assert ae(fp.sinpi(2.25+3j), (4381.1091260582448033 + 4381.1090689950686908j))
    assert ae(fp.sinpi(-0.75), -0.7071067811865475244)
    assert ae(fp.sinpi(-1e-10), -3.1415926535897933529e-10)
    assert ae(fp.sinpi(1e-10), 3.1415926535897933529e-10)
    assert ae(fp.sinpi(1e-10+1e-10j), (3.141592653589793353e-10 + 3.1415926535897933528e-10j))
    assert ae(fp.sinpi(1e-10-1e-10j), (3.141592653589793353e-10 - 3.1415926535897933528e-10j))
    assert ae(fp.sinpi(-1e-10+1e-10j), (-3.141592653589793353e-10 + 3.1415926535897933528e-10j))
    assert ae(fp.sinpi(-1e-10-1e-10j), (-3.141592653589793353e-10 - 3.1415926535897933528e-10j))
    assert ae(fp.cospi(0), 1.0)
    assert ae(fp.cospi(0.25), 0.7071067811865475244)
    assert ae(fp.cospi(0.5), 0.0)
    assert ae(fp.cospi(0.75), -0.7071067811865475244)
    assert ae(fp.cospi(1), -1.0)
    assert ae(fp.cospi(1.25), -0.7071067811865475244)
    assert ae(fp.cospi(1.5), 0.0)
    assert ae(fp.cospi(1.75), 0.7071067811865475244)
    assert ae(fp.cospi(2), 1.0)
    assert ae(fp.cospi(2.25), 0.7071067811865475244)
    assert ae(fp.cospi(0+3j), (6195.8239443081075259 + 0.0j))
    assert ae(fp.cospi(0.25+3j), (4381.1091260582448033 - 4381.1090689950686908j))
    assert ae(fp.cospi(0.5+3j), (0.0 - 6195.8238636085899556j))
    assert ae(fp.cospi(0.75+3j), (-4381.1091260582448033 - 4381.1090689950686908j))
    assert ae(fp.cospi(1+3j), (-6195.8239443081075259 + 0.0j))
    assert ae(fp.cospi(1.25+3j), (-4381.1091260582448033 + 4381.1090689950686908j))
    assert ae(fp.cospi(1.5+3j), (0.0 + 6195.8238636085899556j))
    assert ae(fp.cospi(1.75+3j), (4381.1091260582448033 + 4381.1090689950686908j))
    assert ae(fp.cospi(2+3j), (6195.8239443081075259 + 0.0j))
    assert ae(fp.cospi(2.25+3j), (4381.1091260582448033 - 4381.1090689950686908j))
    assert ae(fp.cospi(-0.75), -0.7071067811865475244)
    assert ae(fp.sinpi(-0.7), -0.80901699437494750611)
    assert ae(fp.cospi(-0.7), -0.5877852522924730163)
    assert ae(fp.cospi(-3+2j), (-267.74676148374822225 + 0.0j))
    assert ae(fp.sinpi(-3+2j), (0.0 - 267.74489404101651426j))
    assert ae(fp.sinpi(-0.7+2j), (-216.6116802292079471 - 157.37650009392034693j))
    assert ae(fp.cospi(-0.7+2j), (-157.37759774921754565 + 216.61016943630197336j))

def test_fp_expj():
    assert ae(fp.expj(0), (1.0 + 0.0j))
    assert ae(fp.expj(1), (0.5403023058681397174 + 0.84147098480789650665j))
    assert ae(fp.expj(2), (-0.416146836547142387 + 0.9092974268256816954j))
    assert ae(fp.expj(0.75), (0.73168886887382088631 + 0.68163876002333416673j))
    assert ae(fp.expj(2+3j), (-0.020718731002242879378 + 0.045271253156092975488j))
    assert ae(fp.expjpi(0), (1.0 + 0.0j))
    assert ae(fp.expjpi(1), (-1.0 + 0.0j))
    assert ae(fp.expjpi(2), (1.0 + 0.0j))
    assert ae(fp.expjpi(0.75), (-0.7071067811865475244 + 0.7071067811865475244j))
    assert ae(fp.expjpi(2+3j), (0.000080699517570304599239 + 0.0j))

def test_fp_bernoulli():
    assert ae(fp.bernoulli(0), 1.0)
    assert ae(fp.bernoulli(1), -0.5)
    assert ae(fp.bernoulli(2), 0.16666666666666666667)
    assert ae(fp.bernoulli(10), 0.075757575757575757576)
    assert ae(fp.bernoulli(11), 0.0)

def test_fp_gamma():
    assert ae(fp.gamma(1), 1.0)
    assert ae(fp.gamma(1.5), 0.88622692545275801365)
    assert ae(fp.gamma(10), 362880.0)
    assert ae(fp.gamma(-0.5), -3.5449077018110320546)
    assert ae(fp.gamma(-7.1), 0.0016478244570263333622)
    assert ae(fp.gamma(12.3), 83385367.899970000963)
    assert ae(fp.gamma(2+0j), (1.0 + 0.0j))
    assert ae(fp.gamma(-2.5+0j), (-0.94530872048294188123 + 0.0j))
    assert ae(fp.gamma(3+4j), (0.0052255384713692141947 - 0.17254707929430018772j))
    assert ae(fp.gamma(-3-4j), (0.00001460997305874775607 - 0.000020760733311509070396j))
    assert ae(fp.fac(0), 1.0)
    assert ae(fp.fac(1), 1.0)
    assert ae(fp.fac(20), 2432902008176640000.0)
    assert ae(fp.fac(-3.5), -0.94530872048294188123)
    assert ae(fp.fac(2+3j), (-0.44011340763700171113 - 0.06363724312631702183j))
    assert ae(fp.loggamma(1.0), 0.0)
    assert ae(fp.loggamma(2.0), 0.0)
    assert ae(fp.loggamma(3.0), 0.69314718055994530942)
    assert ae(fp.loggamma(7.25), 7.0521854507385394449)
    assert ae(fp.loggamma(1000.0), 5905.2204232091812118)
    assert ae(fp.loggamma(1e50), 1.1412925464970229298e+52)
    assert ae(fp.loggamma(1e25+1e25j), (5.6125802751733671621e+26 + 5.7696599078528568383e+26j))
    assert ae(fp.loggamma(3+4j), (-1.7566267846037841105 + 4.7426644380346579282j))
    assert ae(fp.loggamma(-0.5), (1.2655121234846453965 - 3.1415926535897932385j))
    assert ae(fp.loggamma(-1.25), (1.3664317612369762346 - 6.2831853071795864769j))
    assert ae(fp.loggamma(-2.75), (0.0044878975359557733115 - 9.4247779607693797154j))
    assert ae(fp.loggamma(-3.5), (-1.3090066849930420464 - 12.566370614359172954j))
    assert ae(fp.loggamma(-4.5), (-2.8130840817693161197 - 15.707963267948966192j))
    assert ae(fp.loggamma(-2+3j), (-6.776523813485657093 - 4.568791367260286402j))
    assert ae(fp.loggamma(-1000.3), (-5912.8440347785205041 - 3144.7342462433830317j))
    assert ae(fp.loggamma(-100-100j), (-632.35117666833135562 - 158.37641469650352462j))
    assert ae(fp.loggamma(1e-10), 23.025850929882735237)
    assert ae(fp.loggamma(-1e-10), (23.02585092999817837 - 3.1415926535897932385j))
    assert ae(fp.loggamma(1e-10j), (23.025850929940456804 - 1.5707963268526181857j))
    assert ae(fp.loggamma(1e-10j-1e-10), (22.679277339718205716 - 2.3561944902500664954j))

def test_fp_psi():
    assert ae(fp.psi(0, 3.7), 1.1671535393615114409)
    assert ae(fp.psi(0, 0.5), -1.9635100260214234794)
    assert ae(fp.psi(0, 1), -0.57721566490153286061)
    assert ae(fp.psi(0, -2.5), 1.1031566406452431872)
    assert ae(fp.psi(0, 12.9), 2.5179671503279156347)
    assert ae(fp.psi(0, 100), 4.6001618527380874002)
    assert ae(fp.psi(0, 2500.3), 7.8239660143238547877)
    assert ae(fp.psi(0, 1e40), 92.103403719761827391)
    assert ae(fp.psi(0, 1e200), 460.51701859880913677)
    assert ae(fp.psi(0, 3.7+0j), (1.1671535393615114409 + 0.0j))
    assert ae(fp.psi(1, 3), 0.39493406684822643647)
    assert ae(fp.psi(3, 2+3j), (-0.05383196209159972116 + 0.0076890935247364805218j))
    assert ae(fp.psi(4, -0.5+1j), (1.2719531355492328195 - 18.211833410936276774j))
    assert ae(fp.harmonic(0), 0.0)
    assert ae(fp.harmonic(1), 1.0)
    assert ae(fp.harmonic(2), 1.5)
    assert ae(fp.harmonic(100), 5.1873775176396202608)
    assert ae(fp.harmonic(-2.5), 1.2803723055467760478)
    assert ae(fp.harmonic(2+3j), (1.9390425294578375875 + 0.87336044981834544043j))
    assert ae(fp.harmonic(-5-4j), (2.3725754822349437733 - 2.4160904444801621j))

def test_fp_fp_zeta():
    assert ae(fp.zeta(-2+3j, 1), (0.13297115587929864827 + 0.12305330040458776494j))
    assert ae(fp.zeta(-2+3j, 5), (18.384866151867576927 - 11.377015110597711009j))
    assert ae(fp.zeta(1e100), 1.0)
    assert ae(fp.zeta(3), 1.2020569031595942854)
    assert ae(fp.primezeta(2.5+4j), (-0.16922458243438033385 - 0.010847965298387727811j))
    assert ae(fp.primezeta(4), 0.076993139764246844943)

def test_fp_fp_hyp2f1():
    assert ae(fp.hyp2f1(1, (3,2), 3.25, 5.0), (-0.46600275923108143059 - 0.74393667908854842325j))
    assert ae(fp.hyp2f1(1+1j, (3,2), 3.25, 5.0), (-5.9208875603806515987 - 2.3813557707889590686j))
    assert ae(fp.hyp2f1(1+1j, (3,2), 3.25, 2+3j), (0.17174552030925080445 + 0.19589781970539389999j))

def test_fp_fp_erf():
    assert fp.erf(2) == fp.erf(2.0) == fp.erf(2.0+0.0j)
    assert fp.erf(fp.inf) == 1.0
    assert fp.erf(fp.ninf) == -1.0
    assert ae(fp.erf(0), 0.0)
    assert ae(fp.erf(-0), -0.0)
    assert ae(fp.erf(0.3), 0.32862675945912741619)
    assert ae(fp.erf(-0.3), -0.32862675945912741619)
    assert ae(fp.erf(0.9), 0.79690821242283213966)
    assert ae(fp.erf(-0.9), -0.79690821242283213966)
    assert ae(fp.erf(1.0), 0.84270079294971486934)
    assert ae(fp.erf(-1.0), -0.84270079294971486934)
    assert ae(fp.erf(1.1), 0.88020506957408172966)
    assert ae(fp.erf(-1.1), -0.88020506957408172966)
    assert ae(fp.erf(8.5), 1.0)
    assert ae(fp.erf(-8.5), -1.0)
    assert ae(fp.erf(9.1), 1.0)
    assert ae(fp.erf(-9.1), -1.0)
    assert ae(fp.erf(20.0), 1.0)
    assert ae(fp.erf(-20.0), -1.0)
    assert ae(fp.erf(10000.0), 1.0)
    assert ae(fp.erf(-10000.0), -1.0)
    assert ae(fp.erf(1e+50), 1.0)
    assert ae(fp.erf(-1e+50), -1.0)
    assert ae(fp.erf(1j), 1.650425758797542876j)
    assert ae(fp.erf(-1j), -1.650425758797542876j)
    assert ae(fp.erf((2+3j)), (-20.829461427614568389 + 8.6873182714701631444j))
    assert ae(fp.erf(-(2+3j)), -(-20.829461427614568389 + 8.6873182714701631444j))
    assert ae(fp.erf((8+9j)), (-1072006.2525062051158 + 364149.91954310255423j))
    assert ae(fp.erf(-(8+9j)), -(-1072006.2525062051158 + 364149.91954310255423j))
    assert fp.erfc(fp.inf) == 0.0
    assert fp.erfc(fp.ninf) == 2.0
    assert fp.erfc(0) == 1
    assert fp.erfc(-0.0) == 1
    assert fp.erfc(0+0j) == 1
    assert ae(fp.erfc(0.3), 0.67137324054087258381)
    assert ae(fp.erfc(-0.3), 1.3286267594591274162)
    assert ae(fp.erfc(0.9), 0.20309178757716786034)
    assert ae(fp.erfc(-0.9), 1.7969082124228321397)
    assert ae(fp.erfc(1.0), 0.15729920705028513066)
    assert ae(fp.erfc(-1.0), 1.8427007929497148693)
    assert ae(fp.erfc(1.1), 0.11979493042591827034)
    assert ae(fp.erfc(-1.1), 1.8802050695740817297)
    assert ae(fp.erfc(8.5), 2.7623240713337714461e-33)
    assert ae(fp.erfc(-8.5), 2.0)
    assert ae(fp.erfc(9.1), 6.6969004279886077452e-38)
    assert ae(fp.erfc(-9.1), 2.0)
    assert ae(fp.erfc(20.0), 5.3958656116079009289e-176)
    assert ae(fp.erfc(-20.0), 2.0)
    assert ae(fp.erfc(10000.0), 0.0)
    assert ae(fp.erfc(-10000.0), 2.0)
    assert ae(fp.erfc(1e+50), 0.0)
    assert ae(fp.erfc(-1e+50), 2.0)
    assert ae(fp.erfc(1j), (1.0 - 1.650425758797542876j))
    assert ae(fp.erfc(-1j), (1.0 + 1.650425758797542876j))
    assert ae(fp.erfc((2+3j)), (21.829461427614568389 - 8.6873182714701631444j), 1e-13)
    assert ae(fp.erfc(-(2+3j)), (-19.829461427614568389 + 8.6873182714701631444j), 1e-13)
    assert ae(fp.erfc((8+9j)), (1072005.2525062051158 - 364149.91954310255423j))
    assert ae(fp.erfc(-(8+9j)), (-1072005.2525062051158 + 364149.91954310255423j))
    assert ae(fp.erfc(20+0j), (5.3958656116079009289e-176 + 0.0j))

def test_fp_lambertw():
    assert ae(fp.lambertw(0.0), 0.0)
    assert ae(fp.lambertw(1.0), 0.567143290409783873)
    assert ae(fp.lambertw(7.5), 1.5662309537823875394)
    assert ae(fp.lambertw(-0.25), -0.35740295618138890307)
    assert ae(fp.lambertw(-10.0), (1.3699809685212708156 + 2.140194527074713196j))
    assert ae(fp.lambertw(0+0j), (0.0 + 0.0j))
    assert ae(fp.lambertw(4+0j), (1.2021678731970429392 + 0.0j))
    assert ae(fp.lambertw(1000.5), 5.2500227450408980127)
    assert ae(fp.lambertw(1e100), 224.84310644511850156)
    assert ae(fp.lambertw(-1000.0), (5.1501630246362515223 + 2.6641981432905204596j))
    assert ae(fp.lambertw(1e-10), 9.9999999990000003645e-11)
    assert ae(fp.lambertw(1e-10j), (1.0000000000000000728e-20 + 1.0000000000000000364e-10j))
    assert ae(fp.lambertw(3+4j), (1.2815618061237758782 + 0.53309522202097107131j))
    assert ae(fp.lambertw(-3-4j), (1.0750730665692549276 - 1.3251023817343588823j))
    assert ae(fp.lambertw(10000+1000j), (7.2361526563371602186 + 0.087567810943839352034j))
    assert ae(fp.lambertw(0.0, -1), -fp.inf)
    assert ae(fp.lambertw(1.0, -1), (-1.5339133197935745079 - 4.3751851530618983855j))
    assert ae(fp.lambertw(7.5, -1), (0.44125668415098614999 - 4.8039842008452390179j))
    assert ae(fp.lambertw(-0.25, -1), -2.1532923641103496492)
    assert ae(fp.lambertw(-10.0, -1), (1.3699809685212708156 - 2.140194527074713196j))
    assert ae(fp.lambertw(0+0j, -1), -fp.inf)
    assert ae(fp.lambertw(4+0j, -1), (-0.15730793189620765317 - 4.6787800704666656212j))
    assert ae(fp.lambertw(1000.5, -1), (4.9153765415404024736 - 5.4465682700815159569j))
    assert ae(fp.lambertw(1e100, -1), (224.84272130101601052 - 6.2553713838167244141j))
    assert ae(fp.lambertw(-1000.0, -1), (5.1501630246362515223 - 2.6641981432905204596j))
    assert ae(fp.lambertw(1e-10, -1), (-26.303186778379041521 - 3.2650939117038283975j))
    assert ae(fp.lambertw(1e-10j, -1), (-26.297238779529035028 - 1.6328071613455765135j))
    assert ae(fp.lambertw(3+4j, -1), (0.25856740686699741676 - 3.8521166861614355895j))
    assert ae(fp.lambertw(-3-4j, -1), (-0.32028750204310768396 - 6.8801677192091972343j))
    assert ae(fp.lambertw(10000+1000j, -1), (7.0255308742285435567 - 5.5177506835734067601j))
    assert ae(fp.lambertw(0.0, 2), -fp.inf)
    assert ae(fp.lambertw(1.0, 2), (-2.4015851048680028842 + 10.776299516115070898j))
    assert ae(fp.lambertw(7.5, 2), (-0.38003357962843791529 + 10.960916473368746184j))
    assert ae(fp.lambertw(-0.25, 2), (-4.0558735269061511898 + 13.852334658567271386j))
    assert ae(fp.lambertw(-10.0, 2), (-0.34479123764318858696 + 14.112740596763592363j))
    assert ae(fp.lambertw(0+0j, 2), -fp.inf)
    assert ae(fp.lambertw(4+0j, 2), (-1.0070343323804262788 + 10.903476551861683082j))
    assert ae(fp.lambertw(1000.5, 2), (4.4076185165459395295 + 11.365524591091402177j))
    assert ae(fp.lambertw(1e100, 2), (224.84156762724875878 + 12.510785262632255672j))
    assert ae(fp.lambertw(-1000.0, 2), (4.1984245610246530756 + 14.420478573754313845j))
    assert ae(fp.lambertw(1e-10, 2), (-26.362258095445866488 + 9.7800247407031482519j))
    assert ae(fp.lambertw(1e-10j, 2), (-26.384250801683084252 + 11.403535950607739763j))
    assert ae(fp.lambertw(3+4j, 2), (-0.86554679943333993562 + 11.849956798331992027j))
    assert ae(fp.lambertw(-3-4j, 2), (-0.55792273874679112639 + 8.7173627024159324811j))
    assert ae(fp.lambertw(10000+1000j, 2), (6.6223802254585662734 + 11.61348646825020766j))